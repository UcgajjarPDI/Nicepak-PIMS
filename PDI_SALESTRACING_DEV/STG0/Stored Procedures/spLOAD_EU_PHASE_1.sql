CREATE PROCEDURE [STG0].[spLOAD_EU_PHASE_1] 
WITH EXEC AS CALLER
AS
BEGIN  
  BEGIN
    INSERT INTO PDI_SALESTRACING_DEV.STG0.EU_PHASE_1
      (DISTCOID, DISTID, 
      S.DISTACCTID, S.DISTACCTSHIPNAME, S.DISTACCTSHIPADDR1, S.DISTACCTSHIPADDR2, 
      S.DISTACCTSHIPCITY, S.DISTACCTSHIPSTATE, S.DISTACCTSHIPZIP, AVG_ANNUAL_SALES, PHASE_TYPE)
    SELECT
      DISTCOID, DISTID, 
      S.DISTACCTID, S.DISTACCTSHIPNAME, S.DISTACCTSHIPADDR1, S.DISTACCTSHIPADDR2, 
      S.DISTACCTSHIPCITY, S.DISTACCTSHIPSTATE, S.DISTACCTSHIPZIP,
      SUM(S.COTOTALSALESAMNT)/3 AS AVG_ANNUAL_SALES, 'REV 10K' AS PHASE_TYPE
    FROM PDI_SALESTRACING.STAGE.DDS_PDI_SAF_EXTRACT S
    WHERE SALESPERIOD between 20150901 and 20180801
    GROUP BY
      DISTCOID, DISTID, 
      S.DISTACCTID, S.DISTACCTSHIPNAME, S.DISTACCTSHIPADDR1, S.DISTACCTSHIPADDR2, 
      S.DISTACCTSHIPCITY, S.DISTACCTSHIPSTATE, S.DISTACCTSHIPZIP
      HAVING SUM(S.COTOTALSALESAMNT)/3 > 9999.99;
  END
  
  -- Bring in all the hospitals, no matter what the sale is for last two years
  BEGIN
    MERGE PDI_SALESTRACING_DEV.STG0.EU_PHASE_1 T
      USING (
        SELECT
          DISTCOID, DISTID, 
          S.DISTACCTID, S.DISTACCTSHIPNAME, S.DISTACCTSHIPADDR1, S.DISTACCTSHIPADDR2, 
          S.DISTACCTSHIPCITY, S.DISTACCTSHIPSTATE, S.DISTACCTSHIPZIP,
          SUM(S.COTOTALSALESAMNT)/3 AS AVG_ANNUAL_SALES, 'HOSPITAL' AS PHASE_TYPE
        FROM PDI_SALESTRACING.STAGE.DDS_PDI_SAF_EXTRACT S
        WHERE SALESPERIOD between 20160901 and 20180801
              AND (S.COACCTSHIPNAME LIKE '%HOSPITAL%' or S.COACCTSHIPNAME like '% MEDICAL CTR%')
        GROUP BY
          DISTCOID, DISTID, 
          S.DISTACCTID, S.DISTACCTSHIPNAME, S.DISTACCTSHIPADDR1, S.DISTACCTSHIPADDR2, 
          S.DISTACCTSHIPCITY, S.DISTACCTSHIPSTATE, S.DISTACCTSHIPZIP
          ) S ON T.DISTCOID = S.DISTCOID AND T.DISTACCTID = S.DISTACCTID
      
    WHEN NOT MATCHED BY TARGET THEN   -- That means it is a new Contract
      INSERT (
          DISTCOID, DISTID, 
          DISTACCTID, DISTACCTSHIPNAME, DISTACCTSHIPADDR1, DISTACCTSHIPADDR2, 
          DISTACCTSHIPCITY, DISTACCTSHIPSTATE, DISTACCTSHIPZIP, AVG_ANNUAL_SALES, PHASE_TYPE 
              )     
      VALUES (
          DISTCOID, DISTID, 
          DISTACCTID, DISTACCTSHIPNAME, DISTACCTSHIPADDR1, DISTACCTSHIPADDR2, 
          DISTACCTSHIPCITY, DISTACCTSHIPSTATE, DISTACCTSHIPZIP, AVG_ANNUAL_SALES, PHASE_TYPE        
            ) ;
  END
  
  -- Bring in the DDS created mapping whihc may help the mapping
  INSERT INTO STG0.DDS_EU (
  DISTCOID, S.DISTACCTID, 
  COACCTID, COACCTTYPE, COACCTSHIPNAME, COACCTSHIPADDR1, COACCTSHIPADDR2, 
  COACCTSHIPCITY, COACCTSHIPSTATE, COACCTSHIPZIP, COACCTMAX
  )
  SELECT DISTINCT
  S.DISTCOID, S.DISTACCTID, 
  COACCTID, COACCTTYPE, COACCTSHIPNAME, COACCTSHIPADDR1, COACCTSHIPADDR2, 
  COACCTSHIPCITY, COACCTSHIPSTATE, COACCTSHIPZIP, COACCTMAX
  FROM PDI_SALESTRACING.STAGE.DDS_PDI_SAF_EXTRACT S
  JOIN PDI_SALESTRACING_DEV.STG0.EU_PHASE_1 T ON T.DISTCOID = S.DISTCOID AND T.DISTACCTID = S.DISTACCTID
  
END;