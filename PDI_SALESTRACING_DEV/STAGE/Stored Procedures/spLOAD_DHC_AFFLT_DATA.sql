CREATE PROCEDURE [STAGE].[spLOAD_DHC_AFFLT_DATA]
WITH EXEC AS CALLER
AS
BEGIN  

/*
INSERT INTO STAGE.DHC_COMPANY_AFFLT
( DHC_CO_ID, DHC_CO_NM_1,  DHC_CO_ADDR_1, DHC_CO_ADDR_2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, DHC_CO_CAT_CD, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID, NPI_NR,  ADDR_IN,  [CURRENT TIMESTAMP] )
select DISTINCT
  A.AFFILIATED_ACCOUNT_ID, A.AFFILIATED_ACCOUNT_NAME, A.AFFILIATED_ACCOUNT_ADDRESS, A.AFFILIATED_ACCOUNT_ADDRESS1, A.AFFILIATED_ACCOUNT_CITY, A.AFFILIATED_ACCOUNT_STATE, A.AFFILIATED_ACCOUNT_ZIP_CODE, 
  RTRIM(LEFT(AFFILIATED_ACCOUNT_FIRM_TYPE,50)) DHC_CO_CAT , A.AFFILIATED_ACCOUNT_NETWORK_ID, CONVERT(INT,A.AFFILIATED_ACCOUNT_NETWORK_PARENT_ID) NETWORK_PARENT_ID, 
  CONVERT(VARCHAR(50),A.AFFILIATED_ACCOUNT_NPI) NPI_NR, 'Y', CURRENT_TIMESTAMP
from STAGE.PDI_ASC_Affiliations A
LEFT JOIN STAGE.DHC_COMPANY C ON A.AFFILIATED_ACCOUNT_ID = C.DHC_CO_ID
WHERE C.DHC_CO_ID IS NULL;
*/


-- There will be two step process
-- First pick the entities which are not already in DHC_CMPNY table
-- Then merge it in to affiliate table to avoid duplication

----------------------------------------------------
---- PDI_Hospital_Facility_Affiliations
----------------------------------------------------

TRUNCATE TABLE [STAGE].TEMP_DHC_CO_ID;

INSERT INTO [STAGE].TEMP_DHC_CO_ID
select DISTINCT A.AFFILIATED_ACCOUNT_ID
from STAGE.PDI_Hospital_Facility_Affiliations A
LEFT JOIN STAGE.DHC_COMPANY C ON A.AFFILIATED_ACCOUNT_ID = C.DHC_CO_ID
WHERE C.DHC_CO_ID IS NULL;

-- ADD all affliations to relation table - 
  MERGE STAGE.DHC_COMPANY_AFFLT T
    USING (
      SELECT DISTINCT 
        A.AFFILIATED_ACCOUNT_ID AS DHC_CO_ID, A.AFFILIATED_ACCOUNT_NAME AS DHC_CO_NM, A.AFFILIATED_ACCOUNT_HQ_CITY DHC_CO_CITY, 
        A.AFFILIATED_ACCOUNT_HQ_STATE AS DHC_CO_ST, A.AFFILIATED_ACCOUNT_FIRM_TYPE AS DHC_CO_CAT_CD, 
        'N' AS ADDR_IN, CURRENT_TIMESTAMP AS [CURRENT TIMESTAMP]  
      FROM [STAGE].PDI_Hospital_Facility_Affiliations A
      JOIN [STAGE].TEMP_DHC_CO_ID TD ON A.AFFILIATED_ACCOUNT_ID = TD.DHC_CO_ID  -- to limit only the new ones
      ) S ON T.DHC_CO_ID = S.DHC_CO_ID
      
    WHEN NOT MATCHED BY TARGET THEN   -- That means it is a new Contract

      INSERT 
      (DHC_CO_ID, DHC_CO_NM_1, ORIG_CITY, ORIG_ST, DHC_CO_CAT_CD, ADDR_IN,  [CURRENT TIMESTAMP] ) 
      VALUES
      (DHC_CO_ID, DHC_CO_NM, DHC_CO_CITY, DHC_CO_ST, DHC_CO_CAT_CD, ADDR_IN, [CURRENT TIMESTAMP] );
      
----------------------------------------------------
---- PDI_LTC_LTC_Facility_Affiliations
----------------------------------------------------

TRUNCATE TABLE [STAGE].TEMP_DHC_CO_ID;

INSERT INTO [STAGE].TEMP_DHC_CO_ID
select DISTINCT A.AFFILIATED_ACCOUNT_ID
from STAGE.PDI_LTC_LTC_Facility_Affiliations A
LEFT JOIN STAGE.DHC_COMPANY C ON A.AFFILIATED_ACCOUNT_ID = C.DHC_CO_ID
WHERE C.DHC_CO_ID IS NULL;

-- ADD all affliations to relation table - 
  MERGE STAGE.DHC_COMPANY_AFFLT T
    USING (
      SELECT DISTINCT 
        A.AFFILIATED_ACCOUNT_ID AS DHC_CO_ID, A.AFFILIATED_ACCOUNT_NAME AS DHC_CO_NM, A.AFFILIATED_ACCOUNT_HQ_CITY DHC_CO_CITY, 
        A.AFFILIATED_ACCOUNT_HQ_STATE AS DHC_CO_ST, A.AFFILIATED_ACCOUNT_FIRM_TYPE AS DHC_CO_CAT_CD, 'N' AS ADDR_IN, CURRENT_TIMESTAMP AS [CURRENT TIMESTAMP]  
      FROM [STAGE].PDI_LTC_LTC_Facility_Affiliations A
      JOIN [STAGE].TEMP_DHC_CO_ID TD ON A.AFFILIATED_ACCOUNT_ID = TD.DHC_CO_ID  -- to limit only the new ones
      ) S ON T.DHC_CO_ID = S.DHC_CO_ID
      
    WHEN NOT MATCHED BY TARGET THEN   -- That means it is a new Contract

      INSERT 
      (DHC_CO_ID, DHC_CO_NM_1, ORIG_CITY, ORIG_ST, DHC_CO_CAT_CD, ADDR_IN,  [CURRENT TIMESTAMP] ) 
      VALUES
      (DHC_CO_ID, DHC_CO_NM, DHC_CO_CITY, DHC_CO_ST, DHC_CO_CAT_CD, ADDR_IN, [CURRENT TIMESTAMP] );

----------------------------------------------------
---- PDI_PG_Facility_Affiliations
----------------------------------------------------

TRUNCATE TABLE [STAGE].TEMP_DHC_CO_ID;

INSERT INTO [STAGE].TEMP_DHC_CO_ID
select DISTINCT A.AFFILIATED_ACCOUNT_ID
from STAGE.PDI_PG_Facility_Affiliations A
LEFT JOIN STAGE.DHC_COMPANY C ON A.AFFILIATED_ACCOUNT_ID = C.DHC_CO_ID
WHERE C.DHC_CO_ID IS NULL;

-- ADD all affliations to relation table - 
  MERGE STAGE.DHC_COMPANY_AFFLT T
    USING (
      SELECT DISTINCT 
        A.AFFILIATED_ACCOUNT_ID AS DHC_CO_ID, A.AFFILIATED_ACCOUNT_NAME AS DHC_CO_NM, A.AFFILIATED_ACCOUNT_HQ_CITY DHC_CO_CITY, 
        A.AFFILIATED_ACCOUNT_HQ_STATE AS DHC_CO_ST, A.AFFILIATED_ACCOUNT_FIRM_TYPE AS DHC_CO_CAT_CD, 'N' AS ADDR_IN, CURRENT_TIMESTAMP AS [CURRENT TIMESTAMP]  
      FROM [STAGE].PDI_PG_Facility_Affiliations A
      JOIN [STAGE].TEMP_DHC_CO_ID TD ON A.AFFILIATED_ACCOUNT_ID = TD.DHC_CO_ID  -- to limit only the new ones
      ) S ON T.DHC_CO_ID = S.DHC_CO_ID
      
    WHEN NOT MATCHED BY TARGET THEN   -- That means it is a new Contract

      INSERT 
      (DHC_CO_ID, DHC_CO_NM_1,ORIG_CITY, ORIG_ST, DHC_CO_CAT_CD, ADDR_IN,  [CURRENT TIMESTAMP] ) 
      VALUES
      (DHC_CO_ID, DHC_CO_NM, DHC_CO_CITY, DHC_CO_ST, DHC_CO_CAT_CD, ADDR_IN, [CURRENT TIMESTAMP] );


----------------------------------------------------
---- PDI_PG_Facility_Affiliations
----------------------------------------------------

TRUNCATE TABLE [STAGE].TEMP_DHC_CO_ID;

INSERT INTO [STAGE].TEMP_DHC_CO_ID
select DISTINCT A.AFFILIATED_ACCOUNT_ID
from STAGE.PDI_PG_Facility_Affiliations A
LEFT JOIN STAGE.DHC_COMPANY C ON A.AFFILIATED_ACCOUNT_ID = C.DHC_CO_ID
WHERE C.DHC_CO_ID IS NULL;

-- ADD all affliations to relation table - 
  MERGE STAGE.DHC_COMPANY_AFFLT T
    USING (
      SELECT DISTINCT 
        A.AFFILIATED_ACCOUNT_ID AS DHC_CO_ID, A.AFFILIATED_ACCOUNT_NAME AS DHC_CO_NM, A.AFFILIATED_ACCOUNT_HQ_CITY DHC_CO_CITY, 
        A.AFFILIATED_ACCOUNT_HQ_STATE AS DHC_CO_ST, A.AFFILIATED_ACCOUNT_FIRM_TYPE AS DHC_CO_CAT_CD, 'N' AS ADDR_IN, CURRENT_TIMESTAMP AS [CURRENT TIMESTAMP]  
      FROM [STAGE].PDI_PG_Facility_Affiliations A
      JOIN [STAGE].TEMP_DHC_CO_ID TD ON A.AFFILIATED_ACCOUNT_ID = TD.DHC_CO_ID  -- to limit only the new ones
      ) S ON T.DHC_CO_ID = S.DHC_CO_ID
      
    WHEN NOT MATCHED BY TARGET THEN   -- That means it is a new Contract

      INSERT 
      (DHC_CO_ID, DHC_CO_NM_1,ORIG_CITY, ORIG_ST, DHC_CO_CAT_CD, ADDR_IN,  [CURRENT TIMESTAMP] ) 
      VALUES
      (DHC_CO_ID, DHC_CO_NM, DHC_CO_CITY, DHC_CO_ST, DHC_CO_CAT_CD, ADDR_IN, [CURRENT TIMESTAMP] );
  
 ----------------------------------------------------
---- PDI_Hospital_Affiliated_Physicians
----------------------------------------------------

INSERT INTO STAGE.DHC_COMPANY_AFFLT
( DHC_CO_ID, DHC_CO_NM_1, DHC_CO_NM_2, ORIG_CITY, ORIG_ST,  DHC_CO_CAT_CD, DHC_CO_SUB_CAT, NPI_NR,  ADDR_IN,  [CURRENT TIMESTAMP] )
SELECT DISTINCT  
  A.NPI, A.FIRST_NAME, A.LAST_NAME, A.HQ_CITY, A.HQ_STATE, 'PHYS',STAGE.fnFirstWord(SPECIALTY_PRIMARY) as DHC_CO_SUB_CAT, A.NPI, 
  'N' AS ADDR_IN, CURRENT_TIMESTAMP AS [CURRENT TIMESTAMP]  
 FROM [STAGE].PDI_Hospital_Affiliated_Physicians A;
 
----------------------------------------------------
---- PDI_PG_Affiliated_Physicians
----------------------------------------------------

    MERGE STAGE.DHC_COMPANY_AFFLT T
    USING (
      SELECT DISTINCT 
        A.NPI AS DHC_CO_ID, A.FIRST_NAME, A.LAST_NAME, A.HQ_CITY, A.HQ_STATE, 'PHYS' as DHC_CO_CAT_CD,STAGE.fnFirstWord(SPECIALTY_PRIMARY) as DHC_CO_SUB_CAT, A.NPI,  
        'N' AS ADDR_IN, CURRENT_TIMESTAMP AS [CURRENT TIMESTAMP]  
      FROM STAGE.PDI_PG_Physicians A
      ) S ON T.DHC_CO_ID = S.DHC_CO_ID and T.DHC_CO_CAT_CD = 'PHYS'
      
    WHEN NOT MATCHED BY TARGET THEN   -- That means it is a new Contract

      INSERT 
      ( DHC_CO_ID, DHC_CO_NM_1, DHC_CO_NM_2, ORIG_CITY, ORIG_ST,  DHC_CO_CAT_CD, DHC_CO_SUB_CAT, NPI_NR,  ADDR_IN,  [CURRENT TIMESTAMP] )
      VALUES
      (DHC_CO_ID, FIRST_NAME, LAST_NAME, HQ_CITY, HQ_STATE, DHC_CO_CAT_CD, DHC_CO_SUB_CAT, NPI,  ADDR_IN, [CURRENT TIMESTAMP] );
      
    -- Above query Did not add any new records
  -- Get records from CMS
  -- Will update address with CMS DATA - keep a flag for the ones whihc are different to have as an alternate city
  UPDATE A
    SET  A.DHC_CO_ADDR_1 = C.CMPNY_ADDR_1 , DHC_CO_ADDR_2 = C.CMPNY_ADDR_2, 
    DHC_CO_CITY = C.CMPNY_CITY, DHC_CO_ST = C.CMPNY_ST, DHC_CO_ZIP = C.CMPNY_ZIP 
  FROM STAGE.DHC_COMPANY_AFFLT A
  JOIN MDM_STAGE.CMS_COMPANY C on A.NPI_NR = C.NPI_NR;
  
  -- UPDATE ZIP CODE
  UPDATE A
  SET DHC_CO_ZIP = Z.Zipcode
  FROM STAGE.DHC_COMPANY_AFFLT A
  JOIN REF.ZIP_CODE Z ON A.DHC_CO_CITY = Z.City AND A.DHC_CO_ST = Z.State
  WHERE A.DHC_CO_ZIP IS NULL;
  
  -- UPDATE BY CITY AND STATE
  UPDATE A
    SET  A.DHC_CO_ADDR_1 = C.CMPNY_ADDR_1 , DHC_CO_ADDR_2 = C.CMPNY_ADDR_2, DHC_CO_ZIP = C.CMPNY_ZIP , A.MATCH_MTHD = 'CTY_ST'
  FROM STAGE.DHC_COMPANY_AFFLT A
  JOIN MDM_STAGE.CMS_COMPANY C ON C.FIRST_NAME = A.DHC_CO_NM_1 AND C.LAST_NAME = A.DHC_CO_NM_2 AND C.CMPNY_CITY = A.DHC_CO_CITY AND C.CMPNY_ST = A.DHC_CO_ST
  WHERE A.DHC_CO_ADDR_1 IS NULL;
    
   END;