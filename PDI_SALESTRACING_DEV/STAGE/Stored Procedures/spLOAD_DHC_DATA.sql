CREATE PROCEDURE [STAGE].[spLOAD_DHC_DATA]
WITH EXEC AS CALLER
AS
BEGIN  

--  LOAD HOSPITAL DATA
TRUNCATE TABLE STAGE.DHC_COMPANY;

  INSERT INTO STAGE.DHC_COMPANY
    (DHC_CO_ID,  ORIG_NM, ORIG_ADDR1 , ORIG_ADDR2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, DHC_CO_CNTRY, 
    DHC_CO_CAT_CD, DHC_CO_SUB_CAT, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID, DHC_CO_WEBSITE, GLN_NR, HIN_NR, DEA_NR
    )
   SELECT
    HOSPITAL_ID, HOSPITAL_NAME, HQ_ADDRESS, HQ_ADDRESS1, HQ_CITY, HQ_STATE, HQ_ZIP_CODE, 'USA',
    CASE WHEN FIRM_TYPE = 'Hospital' THEN 'HSP' WHEN FIRM_TYPE = 'Health System' THEN 'IDN' END AS DHC_CO_CAT_CD,
    HOSPITAL_TYPE, NETWORK_ID, NETWORK_PARENT_ID, WEBSITE, GLN, HIN, DEA_REGISTRATION_NUMBER
  FROM STAGE.PDI_Hospital_Overview
  
  -- LOAD ASC DATA
  MERGE [PDI_SALESTRACING_DEV].STAGE.DHC_COMPANY T
      USING (
      SELECT DISTINCT 
        HOSPITAL_ID, HOSPITAL_NAME, HQ_ADDRESS, HQ_ADDRESS1, HQ_CITY, HQ_STATE, HQ_ZIP_CODE, 'USA' AS CNTRY,
        'ASC' AS DHC_CO_CAT_CD,
        FIRM_TYPE AS DHC_CO_SUB_CAT, NETWORK_ID, NETWORK_PARENT_ID, WEBSITE, GLN, HIN
      FROM STAGE.PDI_ASC_Overview
      ) S ON T.DHC_CO_ID = S.HOSPITAL_ID
      
    WHEN NOT MATCHED BY TARGET THEN   -- That means it is a new Contract

      INSERT 
        (DHC_CO_ID, ORIG_NM, ORIG_ADDR1 , ORIG_ADDR2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, DHC_CO_CNTRY, 
        DHC_CO_CAT_CD, DHC_CO_SUB_CAT, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID, DHC_CO_WEBSITE, GLN_NR, HIN_NR)
      VALUES
      ( HOSPITAL_ID, HOSPITAL_NAME, HQ_ADDRESS, HQ_ADDRESS1, HQ_CITY, HQ_STATE, HQ_ZIP_CODE, CNTRY,
        DHC_CO_CAT_CD,DHC_CO_SUB_CAT, NETWORK_ID, NETWORK_PARENT_ID, WEBSITE, GLN, HIN);

  ---------------------  
  -- LOAD LTC DATA
  ---------------------
  
  ---Insert LTC - ALF (Assisted Living Facilit) data
  INSERT INTO STAGE.DHC_COMPANY
  (DHC_CO_ID, ORIG_NM, ORIG_ADDR1 , ORIG_ADDR2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, DHC_CNTY,
   DHC_CO_CAT_CD, DHC_CO_SUB_CAT, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID, NPI_NR )
  SELECT HOSPITAL_ID, HOSPITAL_NAME, HQ_ADDRESS, HQ_ADDRESS1, HQ_CITY, HQ_STATE, HQ_ZIP_CODE, HQ_COUNTY, 
  'LTC', FIRM_TYPE, NETWORK_ID, NETWORK_PARENT_ID, NPI_NUMBER
  FROM STAGE.PDI_LTC_ALF_Overview;

  ----Insert LTC -HHA (Home Health Aide) data
  INSERT INTO STAGE.DHC_COMPANY
  (DHC_CO_ID, ORIG_NM, ORIG_ADDR1 , ORIG_ADDR2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, DHC_CNTY,
   DHC_CO_CAT_CD, DHC_CO_SUB_CAT, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID, HSPTL_PARENT_ID, NPI_NR )
   
   SELECT HOSPITAL_ID, HOSPITAL_NAME,  HQ_ADDRESS, HQ_ADDRESS1, HQ_CITY, HQ_STATE, HQ_ZIP_CODE, HQ_COUNTY,  
   'LTC', 'Home Health Agencies', NETWORK_ID, NETWORK_PARENT_ID, HOSPITAL_PARENT_ID, NPI_NUMBER 
   FROM STAGE.PDI_LTC_HHA_Overview

  ----Insert LTC -SNF (Skilled Nurse Facility) data
  INSERT INTO STAGE.DHC_COMPANY
  (DHC_CO_ID, ORIG_NM, ORIG_ADDR1 , ORIG_ADDR2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, DHC_CNTY,
   DHC_CO_CAT_CD, DHC_CO_SUB_CAT, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID, HSPTL_PARENT_ID, NPI_NR )
   
  SELECT HOSPITAL_ID,HOSPITAL_NAME,HQ_ADDRESS,HQ_ADDRESS1,HQ_CITY,HQ_STATE,HQ_ZIP_CODE, HQ_COUNTY,
  'LTC','Skilled Nursing Facilities',NETWORK_ID,NETWORK_PARENT_ID,HOSPITAL_PARENT_ID,NPI_NUMBER
  FROM STAGE.PDI_LTC_SNF_Overview

  --Insert LTC -Hospice data
  INSERT INTO STAGE.DHC_COMPANY
  (DHC_CO_ID, ORIG_NM, ORIG_ADDR1 , ORIG_ADDR2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, 
   DHC_CO_CAT_CD, DHC_CO_SUB_CAT, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID, HSPTL_PARENT_ID, NPI_NR )
  SELECT 
  HOSPITAL_ID,HOSPITAL_NAME,HQ_ADDRESS,HQ_ADDRESS1,HQ_CITY,HQ_STATE,HQ_ZIP_CODE,
  'LTC', 'HOSPICE',NETWORK_ID,NETWORK_PARENT_ID,HOSPITAL_PARENT_ID,NPI_NUMBER
  FROM STAGE.PDI_LTC_Hospice_Overview

  --Insert PG
  INSERT INTO STAGE.DHC_COMPANY
  (DHC_CO_ID, ORIG_NM, ORIG_ADDR1 , ORIG_ADDR2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, 
   DHC_CO_CAT_CD, DHC_CO_SUB_CAT, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID, HSPTL_PARENT_ID, NPI_NR)
  SELECT 
  HOSPITAL_ID,HOSPITAL_NAME,HQ_ADDRESS,HQ_ADDRESS1,HQ_CITY,HQ_STATE,HQ_ZIP_CODE,
  'PG', 
  CASE WHEN LTRIM(RTRIM(PG_TYPE)) = 'Academic/Faculty Practice' THEN 'Academic Practice' 
      WHEN LTRIM(RTRIM(PG_TYPE)) = 'Single/Multi-Specialty Physician Group' THEN 'Specialty Physician Group' 
      ELSE PG_TYPE END AS  DHC_CO_SUB_CAT,
  NETWORK_ID,NETWORK_PARENT_ID,HOSPITAL_PARENT_ID,NPI_NUMBER
  FROM STAGE.PDI_PG_Overview
  
  -- INSERT ASC AFFLIATE (IT HAS FULL ADDRESS
  INSERT INTO STAGE.DHC_COMPANY
  ( DHC_CO_ID, ORIG_NM,  ORIG_ADDR1 , ORIG_ADDR2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, DHC_CO_CAT_CD, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID, NPI_NR )
  SELECT DISTINCT
    A.AFFILIATED_ACCOUNT_ID, A.AFFILIATED_ACCOUNT_NAME, A.AFFILIATED_ACCOUNT_ADDRESS, A.AFFILIATED_ACCOUNT_ADDRESS1, A.AFFILIATED_ACCOUNT_CITY, A.AFFILIATED_ACCOUNT_STATE, A.AFFILIATED_ACCOUNT_ZIP_CODE, 
    RTRIM(LEFT(AFFILIATED_ACCOUNT_FIRM_TYPE,50)) DHC_CO_CAT , A.AFFILIATED_ACCOUNT_NETWORK_ID, CONVERT(INT,A.AFFILIATED_ACCOUNT_NETWORK_PARENT_ID) NETWORK_PARENT_ID, 
    CONVERT(VARCHAR(50),A.AFFILIATED_ACCOUNT_NPI) NPI_NR
  FROM STAGE.PDI_ASC_Affiliations A
  LEFT JOIN STAGE.DHC_COMPANY C ON A.AFFILIATED_ACCOUNT_ID = C.DHC_CO_ID
  WHERE C.DHC_CO_ID IS NULL;
 
  -- UPDATE IDN COMPANY TYPE
  UPDATE CMPNY.COMPANY SET CMPNY_TYP_ID = 2
  WHERE CMPNY_SGMNT_ID = 3;
      
  MERGE STAGE.DHC_COMPANY T
    USING (
      SELECT DISTINCT 
        DHC_ID, CMPNY_NM, ADDR1, ADDR2, CITY, ST, ZIP,CMPNY_TYP,  NTWROK_ID, NTWRK_PRNT_ID
      FROM STG0.GPO_MMBR_DHC ) S ON T.DHC_CO_ID = S.DHC_ID
      
    WHEN NOT MATCHED BY TARGET THEN   

      INSERT 
      (DHC_CO_ID, ORIG_NM, ORIG_ADDR1 , ORIG_ADDR2, DHC_CO_CITY, DHC_CO_ST, DHC_CO_ZIP, 
       DHC_CO_CAT_CD, DHC_NTWRK_ID, DHC_NTWRK_PARENT_ID ) 
      VALUES
      (DHC_ID, CMPNY_NM, ADDR1, ADDR2, CITY, ST, ZIP,CMPNY_TYP,  NTWROK_ID, NTWRK_PRNT_ID);
  
  --- ADDRESS CLEAN --
  
  
  -- IF ETL dropped any zero --
    UPDATE STAGE.DHC_COMPANY
    SET DHC_CO_ZIP = CASE WHEN LEN(DHC_CO_ZIP)=4 THEN '0'+DHC_CO_ZIP 
                          WHEN LEN(DHC_CO_ZIP)=3 THEN '00'+DHC_CO_ZIP 
                          WHEN LEN(LTRIM(RTRIM(DHC_CO_ZIP)))>5 THEN LEFT(LTRIM(RTRIM(DHC_CO_ZIP)),5)
                          ELSE DHC_CO_ZIP
                          END;
    
      
  TRUNCATE TABLE MDM_STAGE.TEMP_ADDR;
  
  INSERT INTO MDM_STAGE.TEMP_ADDR ( SRC_ID, ADDR_1, ADDR_2)
  SELECT DHC_CO_ID, ORIG_ADDR1 , ORIG_ADDR2
  FROM STAGE.DHC_COMPANY WHERE ORIG_ADDR1 IS NOT NULL;
  
  --select * from STAGE.DHC_COMPANY WHERE DHC_CO_ADDR_1 IS NULL
  
  EXEC [STAGE].[spADDR_LAUNDRY];
  
  TRUNCATE TABLE MDM_STAGE.DHC_ADDR_PARTS;
  
  INSERT INTO MDM_STAGE.DHC_ADDR_PARTS ( 
    SRC_ID, ST_NR, ST_NM, ST_TYP, ST_DIR, ST_NR_2, BLDG_NR, FL_NR, STE_NR, DIR_1, ADDR_1, ADDR_2  )
  SELECT 
    SRC_ID, ST_NR, ST_NM, ST_TYP, ST_DIR, ST_NR_2, BLDG_NR, FL_NR, STE_NR, DIR_1, ADDR_1, ADDR_2  
  FROM MDM_STAGE.TEMP_ADDR_PARTS
  ;  
  
  UPDATE A SET A.ZIP = C.DHC_CO_ZIP
    FROM MDM_STAGE.DHC_ADDR_PARTS A
  JOIN STAGE.DHC_COMPANY C ON A.SRC_ID = C.DHC_CO_ID;
  
  UPDATE C
    SET C.DHC_CO_ADDR_1 = A.ADDR_1, C.DHC_CO_ADDR_2 =  A.ADDR_2
  FROM STAGE.DHC_COMPANY C
  JOIN MDM_STAGE.TEMP_ADDR_PARTS A ON C.DHC_CO_ID = A.SRC_ID;
  
  TRUNCATE TABLE  MDM_STAGE.TEMP_ADDR_PARTS;
  TRUNCATE TABLE  MDM_STAGE.TEMP_ADDR;
  
  -- reassign primary location city to the address for better compability
  UPDATE C SET
    C.DHC_CO_CITY = Z.City
  from STAGE.DHC_COMPANY C
  JOIN REF.ZIP_CODE Z ON C.DHC_CO_ZIP = Z.Zipcode
  WHERE  Z.LocationType = 'PRIMARY'
  AND Z.City <> C.DHC_CO_CITY ;
  
  -- In case there is an issue with state nm - did not find any
  UPDATE C SET
    C.DHC_CO_ST = Z.State
  from STAGE.DHC_COMPANY C
  JOIN REF.ZIP_CODE Z ON C.DHC_CO_ZIP = Z.Zipcode
  WHERE  Z.LocationType = 'PRIMARY'
  AND Z.State <> C.DHC_CO_ST ;
  
  -- If there is any invalid zip code in the DHC file, raise an issue
    
    UPDATE STAGE.DHC_COMPANY 
    SET ISSUE_FLG = NULL;
    
    UPDATE C
    SET C.ISSUE_FLG = 'Invalid ZIP'
    FROM STAGE.DHC_COMPANY C
    LEFT JOIN REF.ZIP_CODE Z ON C.DHC_CO_ZIP = Z.Zipcode
    WHERE Z.Zipcode IS NULL;
    
  
  EXEC  STAGE.spDHC_NAME_CLEANSE;
   
  END;