CREATE PROCEDURE [STAGE].[spTRC_CLEANSE] 
WITH EXEC AS CALLER
AS
BEGIN  
 
  -- save the roginal value (for now)
  UPDATE STG0.TRC_ENDUSER_1
    SET ADDR1_ORIG = DISTACCTSHIPADDR1, ADDR2_ORIG = DISTACCTSHIPADDR2
  WHERE Cleanse_Flag = 'P';
  
  --Delete addr 2 when addr 1 and addr 2 is exactly same
  UPDATE STG0.TRC_ENDUSER_1 SET DISTACCTSHIPADDR2 = NULL,
        Cleanse_Flag = 'A'
  WHERE DISTACCTSHIPADDR1 = DISTACCTSHIPADDR2
  AND Cleanse_Flag = 'P';

  -- CONVERT STREET NUMBER FROM CHAR TO NUMBER
  UPDATE C
  SET DISTACCTSHIPADDR1 =
    CONVERT(VARCHAR(10),N.NBR_NUM)+' '+ RIGHT(C.DISTACCTSHIPADDR1 ,LEN(C.DISTACCTSHIPADDR1)-charindex(' ',C.DISTACCTSHIPADDR1 )),
        Cleanse_Flag = 'A'
  FROM STG0.TRC_ENDUSER_1 C, 
  REF.NBR_CNVRTR N
  WHERE 
  C.DISTACCTSHIPADDR1 IS NOT NULL AND charindex(' ',C.DISTACCTSHIPADDR1) > 0
  AND ISNUMERIC(LEFT(C.DISTACCTSHIPADDR1,charindex(' ',C.DISTACCTSHIPADDR1)-1)) = 0
  AND LEFT(C.DISTACCTSHIPADDR1,charindex(' ',C.DISTACCTSHIPADDR1)-1) = N.NBR_STR ;

  -- Need to give a Temporary value to all 
  
  UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR2 = 'TEMP VALUE'
  WHERE DISTACCTSHIPADDR2 IS NULL; 

  -- When Addr1 1 is null, but Addr2 has value with numeric start - SWITCH
  UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR1 = DISTACCTSHIPADDR2, 
        DISTACCTSHIPADDR2 = ADDR1_ORIG,
        Cleanse_Flag = 'A'
  WHERE DISTACCTSHIPADDR1 IS NULL AND DISTACCTSHIPADDR2 IS NOT NULL
  AND ISNUMERIC(LEFT(DISTACCTSHIPADDR2,1)) = 1;
  
  -- Make the address 1 as 'Unknown'
  UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR1 = 'NO ADRESS'
  WHERE DISTACCTSHIPADDR1 IS NULL OR DISTACCTSHIPADDR1 LIKE 'ZIP%';
    
  -- When Addr1 start with char bur Add2 start with numeric - SWITCH
  UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR1 = DISTACCTSHIPADDR2, 
        DISTACCTSHIPADDR2 = ADDR1_ORIG,
        Cleanse_Flag = 'A'
  WHERE ISNUMERIC(LEFT(DISTACCTSHIPADDR1,1)) = 0
  AND ISNUMERIC(LEFT(DISTACCTSHIPADDR2,1)) = 1;
  
  -- Remove special characters

  UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR1 = STAGE.fnRemoveSpace(REPLACE(DISTACCTSHIPADDR1,'?',' ')), 
        DISTACCTSHIPADDR2 = STAGE.fnRemoveSpace(REPLACE(DISTACCTSHIPADDR2,'?',' ')),
        Cleanse_Flag = 'A';
  
  UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR1 = STAGE.fnRemoveSpace(REPLACE(DISTACCTSHIPADDR1,'#',' ')), 
        DISTACCTSHIPADDR2 = STAGE.fnRemoveSpace(REPLACE(DISTACCTSHIPADDR2,'#',' ')),
        Cleanse_Flag = 'A';
        
  UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR1 = STAGE.fnRemoveSpace(REPLACE(DISTACCTSHIPADDR1,',',' ')), 
        DISTACCTSHIPADDR2 = STAGE.fnRemoveSpace(REPLACE(DISTACCTSHIPADDR2,',',' ')),
        Cleanse_Flag = 'A';
 /* 
  -- In case we have created extra spaces
  UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR1 = STAGE.fnRemoveSpace(DISTACCTSHIPADDR1), 
        DISTACCTSHIPADDR2 = STAGE.fnRemoveSpace(DISTACCTSHIPADDR2);*/

------------------------------------------------------------------------------------------------------

  -- REMOVE site, building etc
  DECLARE @LOC_TYP VARCHAR(20), @LOC_VAR VARCHAR(20), @LOC_STD VARCHAR(20), @CAT VARCHAR(20);
 
   DECLARE iCur CURSOR FOR
    SELECT ADDR_TYP, ADDR_VAR, ADDR_STD , CAT
    FROM REF.ADDR_STD
    WHERE CAT LIKE 'ADDR2%'
    
  OPEN iCur
    FETCH NEXT FROM iCur into 
    @LOC_TYP, @LOC_VAR, @LOC_STD, @CAT;
    
  WHILE @@FETCH_STATUS = 0
    BEGIN
      IF   @LOC_TYP = 'FLOOR'
      BEGIN
        UPDATE STG0.TRC_ENDUSER_1
        SET DISTACCTSHIPADDR1 = DISTACCTSHIPADDR2, DISTACCTSHIPADDR2 = DISTACCTSHIPADDR1
        WHERE  DISTACCTSHIPADDR1 LIKE '%'+@LOC_VAR+'%' AND DISTACCTSHIPADDR2 IS NOT NULL AND ISNUMERIC(LEFT(DISTACCTSHIPADDR2,1)) = 1
      END
      
      SET @LOC_VAR = ' '+LTRIM(RTRIM(@LOC_VAR));
      UPDATE STG0.TRC_ENDUSER_1
      SET DISTACCTSHIPADDR1 = LEFT(DISTACCTSHIPADDR1,(charindex(@LOC_VAR,DISTACCTSHIPADDR1)-1)),
          DISTACCTSHIPADDR2 = CASE WHEN @CAT = 'ADDR2_KEEP' THEN RIGHT(DISTACCTSHIPADDR1 ,LEN(DISTACCTSHIPADDR1)-charindex(@LOC_VAR,DISTACCTSHIPADDR1)+1)
                                   WHEN @CAT = 'ADDR2_REMOVE' THEN 'TEMP VALUE' END,
          Cleanse_Flag = 'A'
      WHERE  DISTACCTSHIPADDR1 LIKE '%'+@LOC_VAR+'%' AND charindex(@LOC_VAR,DISTACCTSHIPADDR1)>0;
      
--      NEXTRECORD:

      FETCH NEXT FROM iCur into 
      @LOC_TYP, @LOC_VAR, @LOC_STD, @CAT;
      
    END;
    CLOSE iCur; DEALLOCATE iCur;
    
    -- MAKE THE ADDR2 STANDARD - Suite to STE, Building to BLDG
    
    UPDATE E
      SET DISTACCTSHIPADDR2 = REPLACE(DISTACCTSHIPADDR2,LEFT(DISTACCTSHIPADDR2,charindex(' ',DISTACCTSHIPADDR2)),A.ADDR_STD)
    FROM STG0.TRC_ENDUSER_1 E
    JOIN REF.ADDR_STD A ON LTRIM(RTRIM(LEFT(DISTACCTSHIPADDR2,charindex(' ',DISTACCTSHIPADDR2)))) = A.ADDR_VAR
    WHERE 
    DISTACCTSHIPADDR2 IS NOT NULL AND
    CAT = 'ADDR2_KEEP';

    -- This will take care of Floor
    UPDATE E
      SET DISTACCTSHIPADDR2 = A.ADDR_STD
    FROM STG0.TRC_ENDUSER_1 E
    JOIN REF.ADDR_STD A ON LTRIM(RTRIM(DISTACCTSHIPADDR2)) = A.ADDR_VAR
    WHERE 
    DISTACCTSHIPADDR2 IS NOT NULL AND
    CAT = 'ADDR2_KEEP';
 /*   
    OPEN db_cursor  
FETCH NEXT FROM db_cursor INTO @name  

WHILE @@FETCH_STATUS = 0  
BEGIN  
      SET @fileName = @path + @name + '_' + @fileDate + '.BAK' 
      BACKUP DATABASE @name TO DISK = @fileName 

      FETCH NEXT FROM db_cursor INTO @name 
END 

CLOSE db_cursor  
DEALLOCATE db_cursor */
    
  -----------------------------------------------------------------------------------------------
  UPDATE STG0.TRC_ENDUSER_1 SET DISTACCTSHIPADDR1 = STAGE.fnRemoveSpace( REPLACE(DISTACCTSHIPADDR1,'.', ''));
  UPDATE STG0.TRC_ENDUSER_1 SET DISTACCTSHIPADDR1 = STAGE.fnRemoveSpace( REPLACE(DISTACCTSHIPADDR1,'.', ''));
  UPDATE STG0.TRC_ENDUSER_1 SET DISTACCTSHIPADDR1 = STAGE.fnRemoveSpace( REPLACE(DISTACCTSHIPADDR1,'.', ''));
  
    UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR1 = LTRIM(RTRIM(STAGE.fnRemoveSpace(DISTACCTSHIPADDR1))), 
        DISTACCTSHIPADDR2 = LTRIM(RTRIM(STAGE.fnRemoveSpace(DISTACCTSHIPADDR2)));

  
  -- Make the names as private
  UPDATE STG0.TRC_ENDUSER_1
  SET DISTACCTSHIPNAME = 'Private', 
      Cleanse_Flag = 'A'
WHERE DISTACCTSHIPADDR1 = 'NO ADRESS' 
  AND (DISTACCTSHIPNAME LIKE 'PRIVATE%'
  OR DISTACCTSHIPNAME = 'PATIENT' 
  OR DISTACCTSHIPNAME LIKE '%ZIP ACCT'
  OR DISTACCTSHIPNAME IN ('HOME PATIENT', 'CUSTOMER PICK UP','EMPLOYEE SALES','HOUSE ACCOUNT'));
  
    UPDATE STG0.TRC_ENDUSER_1
    SET DISTACCTSHIPADDR2 = NULL
  WHERE DISTACCTSHIPADDR2 = 'TEMP VALUE' OR DISTACCTSHIPADDR2 LIKE 'ZIP%' OR DISTACCTSHIPADDR2 LIKE 'ATT%' OR DISTACCTSHIPADDR2 LIKE 'ACC%'; 

  -----------------------------------------------------------------------------------------------
  
  -- Standard address 
  
  DECLARE @ADDR_VAR VARCHAR(20), @ADDR_STD VARCHAR(20);
 
   DECLARE iCur2 CURSOR FOR
    SELECT ADDR_VAR, ADDR_STD 
    FROM REF.ADDR_STD
    WHERE CAT = 'Location'
    
  OPEN iCur2;
    FETCH NEXT FROM iCur2 into 
    @ADDR_VAR, @ADDR_STD;
    
  WHILE @@FETCH_STATUS = 0
    BEGIN   
      
      SET @ADDR_VAR=' '+@ADDR_VAR;
      UPDATE STG0.TRC_ENDUSER_1
      SET DISTACCTSHIPADDR1 = 
          STAGE.fnRemoveSpace(LEFT(DISTACCTSHIPADDR1,LEN(DISTACCTSHIPADDR1) - CHARINDEX(' ',REVERSE(DISTACCTSHIPADDR1)))+ ' '+@ADDR_STD),
          --STAGE.fnRemoveSpace( LEFT(DISTACCTSHIPADDR1,(charindex(@ADDR_VAR,DISTACCTSHIPADDR1)-1)) + ' '+@ADDR_STD),
          Cleanse_Flag = CASE WHEN @ADDR_VAR<> @ADDR_STD THEN 'A' ELSE Cleanse_Flag END
      WHERE RIGHT(DISTACCTSHIPADDR1,CHARINDEX(' ',REVERSE(DISTACCTSHIPADDR1))) = @ADDR_VAR -- charindex(@ADDR_VAR,DISTACCTSHIPADDR1)>0;
      
      --NEXTRECORD2:

      FETCH NEXT FROM iCur2 into 
      @ADDR_VAR, @ADDR_STD;
      
    END;
    CLOSE iCur2; DEALLOCATE iCur2;
    
      UPDATE STG0.TRC_ENDUSER_1
        SET DISTACCTSHIPADDR1 = STAGE.fnRemoveSpace(DISTACCTSHIPADDR1);
      
      UPDATE STG0.TRC_ENDUSER_1
      SET DISTACCTSHIPADDR1 = 
          STAGE.fnRemoveSpace(LEFT(DISTACCTSHIPADDR1,LEN(DISTACCTSHIPADDR1) - CHARINDEX(' ',REVERSE(DISTACCTSHIPADDR1))))
      WHERE RIGHT(DISTACCTSHIPADDR1,CHARINDEX(' ',REVERSE(DISTACCTSHIPADDR1))) IN ('-',',','.')


   -- If there is any invalid zip code in the DHC file, raise an issue
    
   -- UPDATE STG0.TRC_ENDUSER_1 SET ISSUE_FLG = NULL;
    
    UPDATE C
    SET C.Cleanse_Flag = 'Z'
    FROM STG0.TRC_ENDUSER_1 C
    LEFT JOIN REF.ZIP_CODE Z ON C.DISTACCTSHIPZIP = Z.Zipcode
    WHERE C.DISTACCTSHIPZIP IS NOT NULL AND Z.Zipcode IS NULL;
    

    -- Fix the Zip 
    /*
    UPDATE C
      SET C.DHC_CO_ZIP = Z.Zipcode         
    FROM STAGE.DHC_COMPANY C
    JOIN REF.ZIP_CODE Z ON C.DHC_CO_ZIP = Z.Zipcode 
    WHERE C.ISSUE_FLG = 'Invalid ZIP'
    AND UPPER(LTRIM(RTRIM(C.DHC_CO_CITY))) = UPPER(LTRIM(RTRIM(Z.City)))
    AND C.DHC_CO_ST = Z.State
    AND Z.ZipCodeType = 'STANDARD'; */
    
    -- Add primary city to the DHC_Company File
    
    UPDATE C
      SET C.DISTACCTSHIPCITY = upper(Z.City) -- [STAGE].fnInit(Z.City)
    FROM STG0.TRC_ENDUSER_1 C
    JOIN REF.ZIP_CODE Z ON C.DISTACCTSHIPZIP  = Z.Zipcode 
    WHERE --UPPER(LTRIM(RTRIM(Z.City))) <> UPPER(LTRIM(RTRIM(C.DISTACCTSHIPZIP ))) AND
    C.DISTACCTSHIPZIP IS NOT NULL AND
     Z.LocationType = 'PRIMARY';
     
    
  
  END;